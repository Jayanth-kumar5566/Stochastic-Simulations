y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit)
firt
fit
fit
x=fit
x
x$coefficients
x$coefficients
fit$coefficients
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit$coefficients)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
print(fit$coefficients)
write(sl,"slope")
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
print(sl)
write(sl,'slope')
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
write(sl,tmp)
print(sl)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
write(sl,'tmp')
print(sl)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
x
y
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x_
x
colnames(x)
x
x
x_
x=x_
y=log(y_)
NQ <- diff(y)/diff(x)
log.NQ <- log(NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
#abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
s1
sl
0.02/0.1+
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
0.02/0.1
0.2*1000
200-1
199*0.1
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
#abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
#abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
sl
write(sl,'tmp')
print(sl)
x_ <- read.csv("x.csv")
y_ <- read.csv("y.csv")
x<-x_$X0
y<-log(y_$X0)
#plot(x,y)
NQ <- diff(y)/diff(x)
#plot.ts(NQ)
log.NQ <- log(NQ)
#plot.ts(log.NQ)
low <- lowess(log.NQ) #statsmodels.nonparametric.smoothers_lowess
#plot(low)
cutoff <- 0.9
q <- quantile(low$y, cutoff,na.rm=TRUE)#scipy.stats.mstats.mquatiles
#plot.ts(log.NQ)
#abline(h=q)
x.lower <- x[min(which(low$y > q))]
x.upper <- x[max(which(low$y > q))]
#plot(x,y)
#abline(v=c(x.lower, x.upper))
i=which(x.upper == x)
j=which(x.lower == x)
y_new=y[j:i]
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new -1)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
write(sl,'tmp')
print(sl)
x_new=x[j:i]
plot(x_new,y_new)
fit <- lm(y_new ~ x_new)   # y 'as a linear function of' x
abline(fit)
sl=fit$coefficients
write(sl,'tmp')
print(sl)
